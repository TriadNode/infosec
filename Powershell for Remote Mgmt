#solid resource for ideas and scripting methods, including GPO mgmt
#https://devblogs.microsoft.com/scripting/
#Setup Begin###########################################################
#BELOW IS A VERIFIED METHOD OF REMOTE PS SESSION ON NON-DOMAIN WORKSTATIONS
#Commands to run on remote PC
#Winkey, type "powersh", Rclick "Run as Administrator"
Enable-PSRemoting -SkipNetworkProfileCheck -Force

#set current network connection to "private network" if not already
#join the workgroup if not already

#then run either
Set-Item wsman:\localhost\client\trustedhosts *
Set-Item wsman:\localhost\client\trustedhosts <ipaddress>

#NOTE PSRemoting uses 
#TCP/5985 = HTTP
#TCP/5986 = HTTPS

#Commands to run on mgmt pc
#run either
enter>Set-Item wsman:\localhost\client\trustedhosts *
enter>Set-Item wsman:\localhost\client\trustedhosts <tgt pc ip list>
#then
Restart-Service WinRM
#then 
Test-WsMan <tgt pc>
#Setup End#############################################################

#Remote Admin Begin####################################################
#Section 1 - Connect####################
#to test connection to a pc
Test-WsMan <computername>

#to invoke cmds on tgt pc
Invoke-Command -ComputerName <tgt pc> -ScriptBlock { COMMAND } -credential <username>

#to run remote pssession
Enter-PSSession -ComputerName <tgt pc> -Credential <username>

#Section 2 - Commands###################
#Rename ComputerName
Rename-Computer -NewName <newname> -Restart

#List LocalUsers
Get-LocalUser

#Change Password
$Password = Read-Host -AsSecureString
$UserAccount = Get-LocalUser -Name <username>
$UserAccount | Set-LocalUser -Password $Password

#Change Username
Rename-LocalUser -Name <currentname> -NewName <newname>

#Change User Description
#Set-LocalUser -Name <username> -Description <newdescription>


#Cheat Sheet###########################################################
#record session transcript
Start-Transcript -Path "C:\path\to\filename.txt" -NoClobber
(Ctrl-R searches command history)
Command name	    Alias	                Description
Get-Help                                Prints helpful information about value given after command
Export-CSV                              Used with pipes, exports the stdout of preceeding command into stated path
Set-Location	    cd, chdir, sl	        Sets current working location to a specified location.
Get-Content	      cat, gc, type	        Gets content of item at the specified location.
Add-Content	      ac	                  Adds content to the specified items, such as adding words to a file.
Set-Content	      sc	                  Writes or replaces the content in an item with new content.
Copy-Item	        copy, cp, cpi	        Copies an item from one location to another.
Remove-Item	      del, ri, rm, rmdir	  Deletes the specified items.
Move-Item	        mi, move, mv	        Moves an item from one location to another.
Set-Item	        si	                  Changes the value of an item to the value specified in the command.
New-Item	        ni	                  Creates a new item.
Start-Job	        sajb	                Starts a Windows PowerShell background job.
Compare-Object	  compare, dif	        Compares two sets of objects.
Group-Object	    group	                Groups objects that contain the same value for specified properties.
Invoke-WebRequest	curl, iwr, wget	      Gets content from a web page on the Internet.
Measure-Object	  measure	              Calculates the numeric properties of objects, and the characters, words, and lines
Resolve-Path	    rvpa	                Resolves the wildcard characters in a path, and displays the path contents.
Resume-Job	      rujb	                Restarts a suspended job
Set-Variable	    set, sv	              Sets the value of a variable. Creates the variable if does not exist.
Show-Command	    shcm	                Creates Windows PowerShell commands in a graphical command window.
Sort-Object	      sort	                Sorts objects by property values.
Start-Service	    sasv	                Starts one or more stopped services.
Start-Process	    saps, start	          Starts one or more processes on the local computer.
Suspend-Job	      sujb	                Temporarily stops workflow jobs.
Wait-Job	        wjb	                  Suppresses the command prompt until one or all of Windows PowerShell background jobs
Where-Object	    ?, where	            Selects objects from a collection based on their property values.
Write-Output	    echo, write	          Sends the specified objects to the next command in the pipeline.
