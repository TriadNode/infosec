############# I'm on the hunt for a decent, lightweight Snort or Suricata system to build for fun and profit. ############
### smoothsec is a lightweight snort/surricata IDS with snorby, unified2, pulledpork, pigsty, built on debian 7 wheezy ###
#####################  more info on smoothsec is available at https://github.com/smoothsec/docs/wiki  ####################
## installing from iso... ################################################################################################
#setup new root passwd
#setup new user
#setup new user passwd
#setup snorby account info
#setup snorby account passwd
#reboot
npm update pigsty -g && npm update pigsty-mysql -g
#because debian 7 wheezy is EOL, add the archive to sources.list
echo 'deb http://archive.debian.org/debian wheezy-updates main' >> /etc/apt/sources.list
echo 'deb http://archive.debian.org/debian-security wheezy-updates main' >> /etc/apt/sources.list
#update
apt-get update
#just some minor improvements to smoothsec
apt-get install arpalert openjdk-7-jre fail2ban
cd /etc/arpalert/
mv oui.txt oui.txt.old
apt-get -y rsyslog
wget http://http://standards-oui.ieee.org/oui.txt
#visit http://<newIp>:443 and configure snorby
set time zone under settings> 
set everything else under Administration>
add asset tags as .csv files, will come in very handy
#go into the following and configure according to your use case
/etc/smoothsec.cfg # check all options, ensure paths are correct
/etc/arpalert.conf # check paths
/etc/snort/snort.conf # pay attention to paths and disable/enable options
/etc/suricata/suricata.yaml # pay attention to paths and disable/enable options
/etc/pulledpork/snort/* # enable rulesets one at a time and test
/etc/pulledpork/suricata/* # enable rulesets one at a time and test
#add pulledpork to crontab
04 05 * * * /usr/local/bin/pulledpork.pl -c /etc/snort/pulledpork.conf -l
#install other useful stuff
apt-get install -y htop
apt-get install -y iftop

### Install is complete.  Standby for more as I tune it enough to get useful data.  
### Fine tuning the IDS is kind of a pain at first, since there are multiple input/outputs.  
### Just remember to once-over the base conf's, get the pulledpork.conf's right, then exclusively work from rule files
Top False Positive generators: 
1:200920[5-7] ET TROJAN Possible Downadup/Conficker-C P2P encrypted traffic UDP Ping Packet (bit values 1,4,5)
	This alert is being generated by all multicasts and broadcasts.  
1:2027768 ET EXPLOIT Possible VXWORKS Urgent11 RCE Attempt 
	This alert is being generated by RDP protocol.


#######################################
##### below is what I went through ####
#### up until I installed the above ###
#######################################

#installed from instructions found at http://sublimerobots.com/2017/01/snort-2-9-9-x-ubuntu-systemd-scripts/
#remember to edit those *.conf files in /etc/snort/!!
#remember to add pulledpork to crontab!!
######## exclude me ###################
#@ BASE url step, if php7.x is present then in cli run:
sudo a2dismod php7.x ; sudo a2enmod php5.6 ; sudo service apache2 restart ; sudo systemctl restart apache2
#where 7.x is the php vers.  this downgrades to php5.6
#then revisit http://ip/base/index.php
#######################################

#whitepaper: https://infoscience.epfl.ch/record/141022/files/pdm.pdf
#read 8.4 on oinkmaster
#use A additional data for tuning use
#note that most of this is already tuned by fresh install

#elkstack install
#from https://linuxconfig.org/install-elk-on-ubuntu-18-04-bionic-beaver-linux
	sudo apt install openjdk-8-jre apt-transport-https wget nginx
	wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
#Create a file at /etc/apt/sources.list.d/elastic.list, and paste the following line into it.
	deb https://artifacts.elastic.co/packages/6.x/apt stable main
		#Save that file, and exit. Update Apt.
		sudo apt update
#install elastisearch and kibana
	sudo apt install elasticsearch kibana
	nano /etc/kibana/kibana.yml
		#uncomment server.host: "localhost"
		sudo systemctl restart kibana
		sudo systemctl start elasticsearch
#set up nginx
	echo "admin:`openssl passwd -apr1 YourPassword`" | sudo tee -a /etc/nginx/htpasswd.kibana
	sudo touch /etc/nginx/sites-available/kibana
	nano /etc/nginx/sites-available/kibana
		server {
				listen 80;
				listen [::]:80 ipv6only=on;

				server_name your-site.com;

				auth_basic "Restricted Access";
				auth_basic_user_file /etc/nginx/htpasswd.kibana;

				location / {
					proxy_pass http://localhost:5601;
					proxy_http_version 1.1;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection 'upgrade';
					proxy_set_header Host $host;
					proxy_cache_bypass $http_upgrade;        
				}
			}
	sudo rm /etc/nginx/sites-enabled/default
	sudo ln -s /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana
	sudo systemctl restart nginx
		#if 98 error, then
			sudo fuser -k 80/tcp && sudo fuser -k 443/tcp
			sudo netstat -tulpn (to check for any :80 process left over)
				#if still a service then of course sudo systemctl stop <service>
					sudo systemctl start nginx
#install logstash
	sudo apt install logstash
		#sign into kibana via browser
		#http://localhost:5601 (see proxy_pass above)
#finish config via browser gui.

#integrate snort into elkstack with synesis_lite_snort
#from https://github.com/robcowart/synesis_lite_snort/blob/master/README.md
#cloned currently, prepared for dist
#done. had to individually edit ea .conf and cp syn* files into filebeat dir.  
#dashboard imported per robcowart git readme. 
#error on kibana dashboard buckets, "the aggregation key is missing"
#suspect nginx issue from /etc/nginx/sites-available/kibana openssl import.  
#been watching htop with all this stuff running.  fuck this, apt-get remove && autoclean everything !snort/barnyard2/unified2.  
#u2spewfoo snort.u2.* > ~/Desktop/parseme for first huge tuning session.  

#after looking around, try snorby.
#snorby pre-req's: snort && ruby >=1.9.0 <2.0.0 && rails >=3.0.0 
#tried https://github.com/rvm/ubuntu_rvm
#result: unsuccessful install multiple times, even after running ~/.rvm and ~/.bashrc scripts found on stackexchange.  
#tried https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rvm-on-ubuntu-18-04
#result: worked.  'source /usr/local/rvm/scripts/rvm' rather than what is in guide
rvm install 1.9.3
#won't work until you do below
#add deb http://security.ubuntu.com/ubuntu bionic-security main to /etc/apt/sources.list
sudo apt update
sudo apt-get install -y libssl1.0-dev
#try again
rvm install 1.9.3
#rvm use 1.9.3
#gem install rails -v 3.0.0
#pre-req's fullfilled, can now install snorby
git clone git://github.com/Snorby/snorby.git
cd snorby
#bundle install #fails to find a few gem dependencies
#bundle update #fails
#bundle install --path vendor/cache #fails
#all above fails due to outdated dependencies, research sows that ruby is maintained by lazy people/moves forward too fast for mass maintenance
rvm use 2.6.3
sudo gem install rails
bundle install
#error installing do_postgres (0.10.17), do a gem install do_postgres -v 0.10.17 --source 'https://rubygems.org/'
#and that failed too, failed to build gem native extension
sudo apt-get install -y ruby-dev
##########################################################################################################################
######  jesus christ still missing dependencies on backend.  Tomorrow, consider smoothsec install over the machine  ######  
### smoothsec is a lightweight snort/surricata IDS with snorby, unified2, pulledpork, pigsty, built on debian 7 wheezy ###
#####################  more info on smoothsec is available at https://github.com/smoothsec/docs/wiki  ####################
installing from iso... ###################################################################################################
#setup new root passwd
#setup new user
#setup new user passwd
#setup snorby account info
#setup snorby account passwd
#reboot
npm update pigsty -g && npm update pigsty-mysql -g
#because debian 7 wheezy is EOL, add the archive to sources.list
echo 'deb http://archive.debian.org/debian wheezy-updates main' >> /etc/apt/sources.list
echo 'deb http://archive.debian.org/debian-security wheezy-updates main' >> /etc/apt/sources.list
#update
apt-get update
#just some minor improvements to smoothsec
apt-get install arpalert openjdk-7-jre fail2ban
cd /etc/arpalert/
mv oui.txt oui.txt.old
apt-get -y rsyslog
wget http://http://standards-oui.ieee.org/oui.txt
#visit http://<newIp>:443 and configure snorby
set time zone under settings>
set everything else under Administration>
#go into the following and configure according to your use case
/etc/smoothsec.cfg
/etc/arpalert.conf
/etc/pulledpork/snort/
/etc/pulledpork/suricata/
/etc/snort/snort.conf
/etc/suricata/suricata.yaml
#install other useful stuff
apt-get install -y htop
apt-get install -y iftop
###################################################################################################
###################################### "it JUST WORKS" ############################################
###################################################################################################
general idea
<curl from ip blacklist to> /var/db/snort/iprep/emerging-compromised-ips.txt



