installed from instructions found at http://sublimerobots.com/2017/01/snort-2-9-9-x-ubuntu-systemd-scripts/
@ BASE url step, if php7.x is present then in cli run:
$sudo a2dismod php7.x ; sudo a2enmod php5.6 ; sudo service apache2 restart ; sudo systemctl restart apache2
where 7.x is the php vers.  this downgrades to php5.6
then revisit http://ip/base/index.php

whitepaper: https://infoscience.epfl.ch/record/141022/files/pdm.pdf
read 8.4 on oinkmaster
use A additional data for tuning use
note that most of this is already tuned by fresh install

elkstack install
from https://linuxconfig.org/install-elk-on-ubuntu-18-04-bionic-beaver-linux
	sudo apt install openjdk-8-jre apt-transport-https wget nginx
	wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
Create a file at /etc/apt/sources.list.d/elastic.list, and paste the following line into it.
	deb https://artifacts.elastic.co/packages/6.x/apt stable main
		Save that file, and exit. Update Apt.
		sudo apt update
install elastisearch and kibana
	sudo apt install elasticsearch kibana
	nano /etc/kibana/kibana.yml
		uncomment server.host: "localhost"
		sudo systemctl restart kibana
		sudo systemctl start elasticsearch
set up nginx
	echo "admin:`openssl passwd -apr1 YourPassword`" | sudo tee -a /etc/nginx/htpasswd.kibana
	sudo touch /etc/nginx/sites-available/kibana
	nano /etc/nginx/sites-available/kibana
		server {
				listen 80;
				listen [::]:80 ipv6only=on;

				server_name your-site.com;

				auth_basic "Restricted Access";
				auth_basic_user_file /etc/nginx/htpasswd.kibana;

				location / {
					proxy_pass http://localhost:5601;
					proxy_http_version 1.1;
					proxy_set_header Upgrade $http_upgrade;
					proxy_set_header Connection 'upgrade';
					proxy_set_header Host $host;
					proxy_cache_bypass $http_upgrade;        
				}
			}
	sudo rm /etc/nginx/sites-enabled/default
	sudo ln -s /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana
	sudo systemctl restart nginx
		if 98 error, then
			sudo fuser -k 80/tcp && sudo fuser -k 443/tcp
			sudo netstat -tulpn (to check for any :80 process left over)
				if still a service then of course sudo systemctl stop <service>
					sudo systemctl start nginx
install logstash
	sudo apt install logstash
		sign into kibana via browser
		http://localhost:5601 (see proxy_pass above)
finish config via browser gui.

general idea
<curl from ip blacklist to> /var/db/snort/iprep/emerging-compromised-ips.txt



using reputation preprocessor for blacklists
https://sublimerobots.com/2015/12/the-snort-reputation-preprocessor/



OSSIM installation guide
https://www.alienvault.com/documentation/usm-appliance/initial-setup/ossim-installation.htm
note requires vm therefore requires machine with more than a few gigs of ram


integrating snort with OSSIM
https://snort-org-site.s3.amazonaws.com/production/document_files/files/000/000/113/original/Integrating_Snort_and_OSSIM-rev2.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIXACIED2SPMSC7GA%2F20190724%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20190724T000235Z&X-Amz-Expires=172800&X-Amz-SignedHeaders=host&X-Amz-Signature=8fefbd5ec7c178d6be1e9cb1c598dd92306fe53433c2f2bdce8523b450fc6f6e


