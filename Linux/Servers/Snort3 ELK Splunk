# Build Info
# Hardware: kav60 netbook, L3 switch, management pc
# Software: kali rolling 32-bit; Snort 3; Pulled Pork; ELK stack; Splunk Universal Forwarder
# Topology: netbook hosts snort and elk, forwards logs to separate splunk receiver
# Purpose: get snort 3 beta talking to splunk, i want to see what my smart tv is doing
#
#
#
#
#
# snort install prereq's as outlined in https://snort-org-site.s3.amazonaws.com/production/document_files/files/000/000/211/original/Snort3.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIXACIED2SPMSC7GA%2F20191221%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20191221T191232Z&X-Amz-Expires=172800&X-Amz-SignedHeaders=host&X-Amz-Signature=655b12263db5b7a5ed7a3b1ec1ae0a4a31c632f85df17ef5716a6e37e33a12a5
sudo apt-get update && sudo apt-get dist-upgrade -y
sudo dpkg-reconfigure tzdata
mkdir ~/snort_src
sudo apt-get install -y build-essential autotools-dev libdumbnet-dev libluajit-5.1-dev libpcap-dev zlib1g-dev pkg-config libhwloc-dev cmake
sudo apt-get install -y liblzma-dev openssl libssl-dev cpputest libsqlite3-dev uuid-dev
sudo apt-get install -y asciidoc dblatex source-highlight w3m
sudo apt-get install -y libtool git autoconf  # not necessary in ubuntu 19
sudo apt-get install -y bison flex
sudo apt-get install -y libnetfilter-queue-dev libmnl-dev  # this is only necessary if inline
cd ~/snort_src
wget https://github.com/rurban/safeclib/releases/download/v04062019/libsafec-04062019.0-ga99a05.tar.gz
tar -xzvf libsafec-04062019.0-ga99a05.tar.gz
cd libsafec-04062019.0-ga99a05/
./configure
make
sudo make install
cd ~/snort_src/
wget https://ftp.pcre.org/pub/pcre/pcre-8.43.tar.gz
tar -xzvf pcre-8.43.tar.gz
cd pcre-8.43
./configure
make
sudo make install
cd ~/snort_src
wget https://github.com/gperftools/gperftools/releases/download/gperftools-2.7/gperftools-2.7.tar.gz
tar xzvf gperftools-2.7.tar.gz
cd gperftools-2.7
./configure
make
sudo make install
cd ~/snort_src
wget http://www.colm.net/files/ragel/ragel-6.10.tar.gz
tar -xzvf ragel-6.10.tar.gz
cd ragel-6.10
./configure
make
sudo make install
cd ~/snort_src
wget https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.gz
tar -xvzf boost_1_71_0.tar.gz  # do not install
cd ~/snort_src
wget https://github.com/intel/hyperscan/archive/v5.2.0.tar.gz
tar -xvzf v5.2.0.tar.gz
mkdir ~/snort_src/hyperscan-5.2.0-build
cd hyperscan-5.2.0-build/
cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBOOST_ROOT=~/snort_src/boost_1_71_0/ ../hyperscan-5.2.0
make
sudo make install
cd ~/snort_src
wget https://github.com/google/flatbuffers/archive/v1.11.0.tar.gz -O flatbuffers-v1.11.0.tar.gz
tar -xzvf flatbuffers-v1.11.0.tar.gz
mkdir flatbuffers-build
cd flatbuffers-build
cmake ../flatbuffers-1.11.0
make
sudo make install
cd ~/snort_src
git clone https://github.com/snort3/libdaq.git
cd libdaq
./bootstrap
./configure
make
sudo make install
sudo ldconfig
#
#
# 
#
#
# snort 3 install
cd ~/snort_src
git clone git://github.com/snortadmin/snort3.git
cd snort3
./configure_cmake.sh --prefix=/usr/local --enable-tcmalloc
cd build
make
sudo make install
/usr/local/bin/snort -V  # to verify
export LUA_PATH=/usr/local/include/snort/lua/\?.lua\;\;
export SNORT_LUA_PATH=/usr/local/etc/snort
sh -c "echo 'export LUA_PATH=/usr/local/include/snort/lua/\?.lua\;\;' >> ~/.bashrc"
sh -c "echo 'export SNORT_LUA_PATH=/usr/local/etc/snort' >> ~/.bashrc"
sudo visudo -f /etc/sudoers.d/snort-lua  # create this file
sudo echo 'Defaults env_keep += "LUA_PATH SNORT_LUA_PATH"' >> /etc/sudoers.d/snort-lua  # just add that to the end if echo !work
snort -c /usr/local/etc/snort/snort.lua  # to validate config
# configure network cards
sudo ethtool -k <yournic> | grep receive-offload  # verify output as below
# generic-receive-offload: on
# large-receive-offload: off [fixed]
sudo vi /lib/systemd/system/ethtool.service  # create && enter the below
#[Unit]
#Description=Ethtool Configration for Network Interface
#[Service]
#Requires=network.target
#Type=oneshot
#ExecStart=/sbin/ethtool -K <yournic> gro off
#ExecStart=/sbin/ethtool -K <yournic> lro off
#[Install]
#WantedBy=multi-user.target
sudo systemctl enable ethtool
sudo service ethtool start
sudo ethtool -k <yournic> | grep receive-offload  # verify output as below
# generic-receive-offload: off
# large-receive-offload: off [fixed]
#
#
#
#
#
# install openappID
cd ~/snort_src/
wget https://snort.org/downloads/openappid/<number> -O OpenAppId-<number>  # where <number> is currently 12159
tar -xzvf OpenAppId-<number>
sudo cp -R odp /usr/local/lib/
sudo vi /usr/local/etc/snort/snort.lua  # enter the below at ~line89 [NOTE you must have 4 spaces as indent, not a tab]
# appid =
#{
#    −− appid requires this to use appids in rules
#    app_detector_dir = '/usr/local/lib',
#}
snort -c /usr/local/etc/snort/snort.lua --warn-all  # verify as "Snort successfully"
sudo mkdir /usr/local/etc/snort/rules
sudo touch /usr/local/etc/snort/rules/local.rules
sudo vi /usr/local/etc/snort/rules/local.rules  # enter below or similar as test alerts
#alert tcp any any -> any any ( msg:"Facebook Detected"; appids:"Facebook"; sid:10000001; )
#alert icmp any any -> any any ( msg:"ICMP Traffic Detected"; sid:10000002; )
snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/snort/rules/local.rules  # verify with output "Snort successfully"
sudo snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/snort/rules/local.rules -i <yournic> -A alert_fast -s 65535 -k none  # test run
wget facebook.com  # verify test alert
ctrl_c
sudo mkdir /var/log/snort
sudo vi /usr/local/etc/snort/snort.lua  $ enter below ~line89
#appid =
#{
#    app_detector_dir = '/usr/local/lib',
#    log_stats = true,
#}
sudo snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/snort/rules/local.rules -i <yournic> -A alert_fast -s 65535 -k none -l /var/log/snort
wget facebook.com
wget facebook.com
ping facebook.com
ping google.com
ctrl_c
ls -l /var/log/snort | grep appid_stats.log
sudo chmod a+r /var/log/snort/appid_stats.log
cat /var/log/snort/appid_stats.log
#
#
#
#
#
# install snort community rules
cd ~/snort_src/
wget https://www.snort.org/downloads/community/snort3-community-rules.tar.gz
tar -xvzf snort3-community-rules.tar.gz
cd snort3-community-rules
sudo mkdir /usr/local/etc/snort/rules
sudo mkdir /usr/local/etc/snort/builtin_rules
sudo mkdir /usr/local/etc/snort/so_rules
sudo mkdir /usr/local/etc/snort/lists
sudo cp snort3-community.rules /usr/local/etc/snort/rules/
sudo cp sid-msg.map /usr/local/etc/snort/rules/
snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/snort/rules/snort3-community.rules  # to verify
# enable built-in rules
sudo vi /usr/local/etc/snort/snort.lua  # edit in as below at ~line169
#ips = 
#{
#    -- use this to enable decoded and instpector alerts
#    enable_builtin_rules = true;
#
#    -- use include for rules files; be sure to set your path
#    -- note that rules files can include other rules files
#    --include = 'snort3-community.rules',
#}
snort -c /usr/local/etc/snort/snort.lua  # to reverify as no errors
snort -c /usr/local/etc/snort/snort.lua -R /usr/local/etc/snort/rules/snort3-community.rules  # to reverify as more rules than above
#
#
#
#
#
# snort configuration files
sudo vi /usr/local/etc/snort/snort_defaults.lua  # enter the below at line25
#RULE_PATH = '/usr/local/etc/snort/rules'
#BUILTIN_RULE_PATH = '/usr/local/etc/snort/builtin_rules'
#PLUGIN_RULE_PATH = '/usr/local/etc/snort/so_rules'
#-- If you are using reputation preprocessor set these
#WHITE_LIST_PATH = '/usr/local/etc/snort/lists'
#BLACK_LIST_PATH = '/usr/local/etc/snort/lists'
sudo touch /usr/local/etc/snort/rules/ips.include  # if not already existing
sudo touch /usr/local/etc/snort/rules/local.rules  # if not already existing
sudo vi /usr/local/etc/snort/rules/ips.include  # enter the below
#include rules/snort3-community.rules
#include rules/local.rules
sudo vi /usr/local/etc/snort/rules/sid-msg.map  # enter the below
#10000001 || ICMP Test detected || url,tools.ietf.org/html/rfc792
#10000002 || Facebook Traffic Seen || url,facebook.com
sudo vi /usr/local/etc/snort/snort.lua  # enter the below at line24
#HOME_NET = '<yoursubnet>/<cider>'
#    enable_builtin_rules = true,  # at line172
#    --include = 'snort3_community.rules'  # at line176
#    include = RULE_PATH .. '/ips.include',  # at line177
snort -c /usr/local/etc/snort/snort.lua  # verify as "successfully"
#
#
#
#########################################################################################
#####################(tested and verified all down to this line)#########################
#########################################################################################
#
#
# passing pcap into snort, output alerts as csv
cd ~
mkdir pcaps
cd pcaps
wget https://download.netresec.com/pcap/maccdc-2012/maccdc2012_00000.pcap.gz
gunzip maccdc2012_00000.pcap.gz
wget https://download.netresec.com/pcap/maccdc-2012/maccdc2012_00001.pcap.gz
gunzip maccdc2012_00001.pcap.gz
snort -c /usr/local/etc/snort/snort.lua -r ~/pcaps/maccdc2012_00000.pcap -A alert_fast -s 65535 -k none  # verify as below
# 137538 alerts
# Statistics: Detection: total alerts
# 0hrs2min30sec
# Summary
# Statistics: timing: seconds
#
#
#
#
#
# JSON alerts output plugin
sudo vi /usr/local/etc/snort/snort.lua  # modify as below
262 --alert_csv =
263 --{
264 --file = true,
265 --}
266
267 alert_json =
268 {
269 file = true,
270 limit = 10,
271 fields = 'seconds action class b64_data dir dst_addr \
272 dst_ap dst_port eth_dst eth_len eth_src eth_type gid icmp_code \
273 icmp_id icmp_seq icmp_type iface ip_id ip_len msg mpls pkt_gen \
274 pkt_len pkt_num priority proto rev rule service sid src_addr \
275 src_ap src_port target tcp_ack tcp_flags tcp_len tcp_seq \
276 tcp_win tos ttl udp_len vlan timestamp',
277 }
sudo snort -c /usr/local/etc/snort/snort.lua --pcap-filter \*.pcap --pcap-dir ~/pcaps -l /var/log/snort -s 65535 -k none -m 0x1b
ls -lh /var/log/snort  # to verify alerts output
#
#
#
#
#
# snort startup scripts
sudo groupadd snort
sudo useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort
sudo rm /var/log/snort/*  # this removes old logs, mv if want to retain
sudo chmod -R 5775 /var/log/snort
sudo chown -R snort:snort /var/log/snort
sudo vi /lib/systemd/system/snort3.service  # create systemd script as below
#[Unit]
#Description=Snort3 NIDS Daemon
#After=syslog.target network.target
#[Service]
#Type=simple
#ExecStart=/usr/local/bin/snort -c /usr/local/etc/snort/snort.lua -s 65535 -k none -l /var/log/snort -D -u snort -g snort -i <yournic> -m 0x1b
#[Install]
#WantedBy=multi-user.target
sudo systemctl enable snort3
sudo service snort3 start
service snort3 status  # verify as active/running
sudo journalctl -u snort3.service
#
#
#
#
#
# SPLUNK!
pick up at pdf page30



